import java.util.Scanner;
public class 杨辉三角 {
	public static void main(String[] args) {
		/*
		 * 打印杨辉三角
		 * 1
		 * 1 1
		 * 1 2 1
		 * 1 3 3 1
		 * 1 4 6 4 1
		 * 1 5 10 10 5 1
		 * A:任何一行的第一列和最后一列都是1
		 * B:从第三行开始，每一个数据是它上一行的前一列  
		 * 和上一行的本列之和
		 * 步骤:
		 * A:首先定义一个二维数组.行数如果是n，列数也先定义为n 
		 * B:给这个二维数组任何一行的第一列和最后一列赋值为1
		 * 	 从第三行开始，每一个数据是它上一行的前一列和上一行本列之和、
		 * C:遍历这个二维数组
		 */
		//手动输入确定数组的大小
		/*Scanner sc=new Scanner(System.in);
		System.out.println("请输入一个数据:");
		int n=sc.nextInt();
		//定义二维数组
		int[][] arr=new int[n][n];
		//给这个二维数组任何一行的第一列最后一列赋值为1
		for(int x=0;x<arr.length;x++)
		{
			arr[x][0]=1;   //任何一行的第一列
			arr[x][x]=1;   //任何一行的最后一列
		}
		//从第三行开始，每个数据是它是它上一行的前一列和它上一行的本列之和
		for(int x=2;x<arr.length;x++)
		{
			//y应该从一开始，因为之前已经赋值了，y=x也应该被忽略
			for(int y=1;y<=x-1;y++)
			{
				arr[x][y]=arr[x-1][y-1]+arr[x-1][y];
			}
		}
		//遍历二维数组
		for(int x=0;x<arr.length;x++)
		{
			//System.out.println("进行了打印函数");
			for(int y=0;y<=x;y++)
			{
				System.out.print(arr[x][y]+"\t");	
			}
			System.out.println();
		}*/
		//内循环的变化必须和九九乘法表相似
		//**************************
		/*
		 * 某个公司采用共用电话传递数据信息，数据是小于8位
		 * 为了确保安全，需要对其进行如下加密
		 * A:数据小于8位可以使用int数据的类型
		 * B:加密规则:
		 * 		a:首先将数据倒序
		 * 		b:将每位数字加上5，在用和除以10的余数代替该数
		 * 		c:最后将第一位和最后一位数字交换
		 * C:将加密结果输出在控制台
		 * 如何把数据转化为数组
		 * a:定义一个数据  int num=123456;
		 * b:定义一个数组:  数组的长度是多少呢?
		 * int arr=new int[8];  //数组长度是变化的，不可能超过八位
		 * 在赋值的时候我用一个变量记录索引的变化
		 * int index=0;
		 * C:获取每一个数据
		 *     int ge=number%10;
		 *     int shi=number/10%10;
		 *     int bai=number/10/10%10;
		 *     arr[index]=ger;
		 *     index++;
		 *     arr[index]=shi;
		 *     index++;
		 *     arr[index]=bai;
		 */
		//定义一个数据
		/*int number=123456;
		int[] arr=new int[8];
		int index=0;
		//把每一位的数据获取后存储到数组中
		int index=0;
		arr[index]=number%10;  //arr[0]=6
		index++;
		arr[index]=number/10%10;   //arr[1]=5
		index++;
		arr[index]=number/10/10%10;
		//通过观察，我们发现代码是可以改进的
		while(number>0)
		{
			arr[index]=number%10;
			index++;
			number/=10;
		}
		for(int i=0;i<index;i++)
		{
			arr[i]+=5;
			arr[i]%=10;
		}
		int temp=arr[0];
		arr[0]=arr[index-1];
		arr[index-1]=temp;
		//输出数据
		for(int x=0;x<index;x++)
		{
			System.out.print(arr[x]);
		}*/
		/*把代码改进为键盘录入
		 *把代码改进为方法实现
		 * 
		 */
		Scanner sc=new Scanner(System.in);
		System.out.println("请输入一个数据(小于8位)");
		int number=sc.nextInt();
		String result=jiami(number);
		System.out.println("加密后的结果是:"+result);
	}
	public static String jiami(int number)
	{
		int[] arr=new int[8];
		int index=0;
		while(number>0)
		{
			arr[index]=number%10;
			index++;
			number/=10;
		}
		//那数据+5,然后对 十取得余数
		for(int x=0;x<index;x++)
		{
			arr[x]+=5;
			arr[x]%=10;
		}
		int temp=arr[0];
		arr[0]=arr[index-1];
		arr[index-1]=arr[0];
		String s="";
		for(int x=0;x<index;x++)
		{
			s+=arr[x];
		}
		return s;
	}
}




















